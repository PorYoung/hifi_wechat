1.完成微信验证与用户信息获取
    /controller/wechat.js
2.完成连接用户和消息的数据库设计
    /model/database.js
3.完成修改微信验证与用户信息获取 数据库读写方式
4.通过访问/allChat 加上用户openid的方式不安全，需要改进

5.在表user添加新字段 settings:Object 用以保存用户对活动的设计
Object{
    //界面设计(待定)
    logoSrc: String     //logo
    eventTopic: String   //活动名
    sponsors: Array     /*举办、赞助方    [{
                                                name: String,
                                                logoSrc: String,
                                                profile: String
                                            },{}]
                        */
    //功能选择
    hasVote: boolean    //投票
    hasLottery: boolean //抽奖
    hasGuests: boolean  //来宾
}
功能选择设计：
    已开启功能图标背景被绿色


    <!--此处应可设置单页显示的消息数，默认四个-->
                        <div>
                            <!--此处应可设置用户头像显示的方式，默认方形-->
                            <header><img src="/static/image/u_logo.ico"></header>
                            <div>
                                <span>username</span>
                                <span>this is a message  this is a message this is a message this is a message this is a message this is a message</span>
                            </div>
                            <footer><i class="fa fa-hand-o-right"></i></footer>
                        </div>
                        <div>
                            <!--此处应可设置用户头像显示的方式，默认方形-->
                            <header><img src="/static/image/u_logo.ico"></header>
                            <div>
                                <span>username</span>
                                <span>this is a message</span>
                            </div>
                            <footer><i class="fa fa-hand-o-right"></i></footer>
                        </div>
                        <div>
                            <!--此处应可设置用户头像显示的方式，默认方形-->
                            <header><img src="/static/image/u_logo.ico"></header>
                            <div>
                                <span>username</span>
                                <span>this is a message</span>
                            </div>
                            <footer><i class="fa fa-hand-o-right"></i></footer>
                        </div>
                        <div>
                            <!--此处应可设置用户头像显示的方式，默认方形-->
                            <header><img src="/static/image/u_logo.ico"></header>
                            <div>
                                <span>username</span>
                                <span>this is a message</span>
                            </div>
                            <footer><i class="fa fa-hand-o-right"></i></footer>
                        </div>

6.增加图片上传
    存储在static/image/message
    common/utils下的工具包需要优化
7.下拉刷新修改allChat.ejs中的myTouchEvent
8.formidable处理上传文件
    form.Parse(req);
    form.on('fileBegin',function(name,file){
        file.name = ''
        file.path = ''
        file.type = ''
    })
9.设计缺陷，需要定期清理宾客头像
10.MONGO对数组复杂的操作
    找到username存在且guests数组中存在guestsId为info.guestId的数据，并将其修改
    db.wall.findOneAndUpdate({$and:[{username:info.username},{guests:{$elemMatch:{guestId:info.guestId}}}]},{$set:{"guests.$":info}},{upsert:false,new:true})
11.bug:修改头像后浏览器存在缓存，尝试转换urlData解决